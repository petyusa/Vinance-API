// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vinance.Data.Contexts;

namespace Vinance.Data.Migrations
{
    [DbContext(typeof(VinanceContext))]
    [Migration("20181025104650_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Vinance.Data.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("OpeningBalance");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Accounts","Vinance");

                    b.HasData(
                        new { Id = 1, Name = "Bankszámla", OpeningBalance = 0, UserId = new Guid("00000000-0000-0000-0000-000000000000") },
                        new { Id = 2, Name = "Megtakarítás", OpeningBalance = 0, UserId = new Guid("00000000-0000-0000-0000-000000000000") }
                    );
                });

            modelBuilder.Entity("Vinance.Data.Entities.Categories.ExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ExpenseCategories","Vinance");

                    b.HasData(
                        new { Id = 1, Name = "Extra kiadás", UserId = new Guid("00000000-0000-0000-0000-000000000000") },
                        new { Id = 2, Name = "Élelmiszer", UserId = new Guid("00000000-0000-0000-0000-000000000000") }
                    );
                });

            modelBuilder.Entity("Vinance.Data.Entities.Categories.IncomeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("IncomeCategories","Vinance");

                    b.HasData(
                        new { Id = 1, Name = "Fizetés", UserId = new Guid("00000000-0000-0000-0000-000000000000") },
                        new { Id = 2, Name = "Egyéb bevétel", UserId = new Guid("00000000-0000-0000-0000-000000000000") }
                    );
                });

            modelBuilder.Entity("Vinance.Data.Entities.Categories.TransferCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("TransferCategories","Vinance");

                    b.HasData(
                        new { Id = 1, Name = "Kölcsönadás", UserId = new Guid("00000000-0000-0000-0000-000000000000") },
                        new { Id = 2, Name = "Levétel", UserId = new Guid("00000000-0000-0000-0000-000000000000") }
                    );
                });

            modelBuilder.Entity("Vinance.Data.Entities.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpenseCategoryId");

                    b.Property<int>("FromId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseCategoryId");

                    b.HasIndex("FromId");

                    b.ToTable("Expenses","Vinance");

                    b.HasData(
                        new { Id = 1, Amount = 4000, Comment = "ez egy komment", Date = new DateTime(2018, 10, 25, 12, 46, 50, 128, DateTimeKind.Local), ExpenseCategoryId = 1, FromId = 1, UserId = new Guid("00000000-0000-0000-0000-000000000000") },
                        new { Id = 2, Amount = 5000, Comment = "ez egy másik komment", Date = new DateTime(2018, 10, 25, 12, 46, 50, 128, DateTimeKind.Local), ExpenseCategoryId = 2, FromId = 2, UserId = new Guid("00000000-0000-0000-0000-000000000000") }
                    );
                });

            modelBuilder.Entity("Vinance.Data.Entities.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IncomeCategoryId");

                    b.Property<int>("ToId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("IncomeCategoryId");

                    b.HasIndex("ToId");

                    b.ToTable("Incomes","Vinance");

                    b.HasData(
                        new { Id = 1, Amount = 20000, Comment = "this is an income comment", Date = new DateTime(2018, 10, 25, 12, 46, 50, 128, DateTimeKind.Local), IncomeCategoryId = 1, ToId = 1, UserId = new Guid("00000000-0000-0000-0000-000000000000") },
                        new { Id = 2, Amount = 30000, Comment = "this is another income comment", Date = new DateTime(2018, 10, 25, 12, 46, 50, 128, DateTimeKind.Local), IncomeCategoryId = 2, ToId = 2, UserId = new Guid("00000000-0000-0000-0000-000000000000") }
                    );
                });

            modelBuilder.Entity("Vinance.Data.Entities.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FromId");

                    b.Property<int>("ToId");

                    b.Property<int>("TransferCategoryId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("ToId");

                    b.HasIndex("TransferCategoryId");

                    b.ToTable("Transfers","Vinance");

                    b.HasData(
                        new { Id = 1, Amount = 20000, Comment = "this is a transfer comment", Date = new DateTime(2018, 10, 25, 12, 46, 50, 128, DateTimeKind.Local), FromId = 1, ToId = 2, TransferCategoryId = 1, UserId = new Guid("00000000-0000-0000-0000-000000000000") },
                        new { Id = 2, Amount = 20000, Comment = "this is another transfer comment", Date = new DateTime(2018, 10, 25, 12, 46, 50, 129, DateTimeKind.Local), FromId = 2, ToId = 1, TransferCategoryId = 2, UserId = new Guid("00000000-0000-0000-0000-000000000000") }
                    );
                });

            modelBuilder.Entity("Vinance.Data.Entities.Expense", b =>
                {
                    b.HasOne("Vinance.Data.Entities.Categories.ExpenseCategory", "ExpenseCategory")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Vinance.Data.Entities.Account", "From")
                        .WithMany("Expenses")
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Vinance.Data.Entities.Income", b =>
                {
                    b.HasOne("Vinance.Data.Entities.Categories.IncomeCategory", "IncomeCategory")
                        .WithMany("Incomes")
                        .HasForeignKey("IncomeCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Vinance.Data.Entities.Account", "To")
                        .WithMany("Incomes")
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Vinance.Data.Entities.Transfer", b =>
                {
                    b.HasOne("Vinance.Data.Entities.Account", "From")
                        .WithMany("TransfersFrom")
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Vinance.Data.Entities.Account", "To")
                        .WithMany("TransfersTo")
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Vinance.Data.Entities.Categories.TransferCategory", "TransferCategory")
                        .WithMany("Transfers")
                        .HasForeignKey("TransferCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
